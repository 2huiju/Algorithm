// 문제 설명
// 배열 arr가 주어집니다. 배열 arr의 각 원소는 숫자 0부터 9까지로 이루어져 있습니다. 
//이때, 배열 arr에서 연속적으로 나타나는 숫자는 하나만 남기고 전부 제거하려고 합니다. 
//단, 제거된 후 남은 수들을 반환할 때는 배열 arr의 원소들의 순서를 유지해야 합니다. 예를 들면,
// arr = [1, 1, 3, 3, 0, 1, 1] 이면 [1, 3, 0, 1] 을 return 합니다.
// arr = [4, 4, 4, 3, 3] 이면 [4, 3] 을 return 합니다.
// 배열 arr에서 연속적으로 나타나는 숫자는 제거하고 남은 수들을 return 하는 solution 함수를 완성해 주세요.

// 제한사항
// 배열 arr의 크기 : 1,000,000 이하의 자연수
// 배열 arr의 원소의 크기 : 0보다 크거나 같고 9보다 작거나 같은 정수



function solution(arr) {
  var answer = []
  
  //1.arr배열의 각각의 숫자 (원소)를 가져오기 위한 반복문
  for (let i =0; i<arr.length; i++) {
    // 2.지금의 숫자와 그 뒤에 있는 숫자가 서로 동일한지를 체크하는 조건문
    if( arr[i] !== arr[i+1]) {
      answer.push(arr[i])
    }
  } 
  return answer
}

solution([1,1,3,3,0,1,1])
  

  //배열 arr의 크기는 length로 가져올 수 있음
  //배열의 0번째 인덱스부터 배열의 마지막 인덱스까지 각각 하나씩 가져옴

  //그러기 위해서는 포문을 이용해서 어레이의 각각의 인덱스 값을 가져옴
//i값의 인덱스의 최초값부터 가져올꺼니까 i = 0 부터 시작
//length가 10이라면 인덱스는 9까지 가져와야하니까 i < arr.length



//a의 첫번째 인덱스를 가지고오고, 그 다음인덱스를 하나 가지고옴
//두번째 인덱스를 가지고오고 세번째인덱스를 하나 가지고옴
// 하나씩 비교해서 지금의 숫자와 같지 않으면 앤서에 푸시해서 넣어줌